- name: Deploy symfony
  remote_user: root
  hosts: servers
  become: true

  vars:
    project_name: symfony
    nginx_config_file: symfony.conf
    mysql_root_password: 1234
    github_repo_url: https://github.com/Arthur24-t/Ecommerce
    github_branch: main
    package_php:
      - php8.1
      - php8.1-fpm
      - php8.1-mbstring
      - php8.1-opcache
      - php8.1-xml
      - php8.1-zip
      - php8.1-curl
      - php8.1-mysql
      - php8.1-cli

    packages_to_install:
      - ca-certificates
      - mariadb-server
      - python3-pymysql
      - apt-transport-https
      - software-properties-common
      - wget
      - lsb-release
      - nginx
      - php
      - curl
      - git
      - sudo
      - python3-mysqldb


  tasks:
    - name: Get php 8.1
      shell: curl -sSL https://packages.sury.org/php/README.txt | bash -x
    
    - name: update package
      shell: apt update

    - name: Install packages
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ packages_to_install }}"

    - name: update package
      shell: apt update
    - name: remove Apache
      apt:
        name: "apache2"
        state: absent

    - name: Install packages PHP
      apt:
        name: "{{ item }}"
        state: present
      loop: "{{ package_php }}"

    - name: install composer
      shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"; php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"; php composer-setup.php; php -r "unlink('composer-setup.php');"; mv composer.phar /usr/local/bin/composer

    - name: Clone project from Github
      git:
          repo: "{{ github_repo_url }}"
          dest: "/var/www/{{ project_name }}"
          version: "{{ github_branch }}"
      register: git_clone

    - name: Copy env
      copy:
        src: envexemple
        dest: "/var/www/{{ project_name }}/app/.env"

    - name: Start MariaDB service
      service:
        name: mariadb
        enabled: true
        state: started

    - name: Create MariaDB user
      mysql_user:
        check_implicit_admin: true
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: symfony
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL"
        state: present

    - name: Create MariaDB database
      mysql_db:
        login_user: symfony
        login_password: "{{ mysql_root_password }}"
        name: db_shop
        state: present

      register: output
    - name: Acces Right   
      shell: "usermod -aG sudo arthur"

    - name: Acces Right   
      shell: "chown -R arthur:arthur /var/www/{{ project_name }}"

    - name: Install project dependencies
      become_user: arthur
      composer:
        command: install
        global_command: false
        no_dev: false
        working_dir: "/var/www/{{ project_name }}/app"

    - name: Run migration
      command: bin/console doctrine:migrations:migrate --no-interaction
      args:
        chdir: /var/www/{{ project_name }}/app

    - name: Create Nginx virtual host file
      template:
        src: symfony.conf
        dest: "/etc/nginx/sites-available/{{ nginx_config_file }}"
      notify: Reload Nginx

    - name: Enable Nginx virtual host
      file:
        src: "/etc/nginx/sites-available/{{ nginx_config_file }}"
        dest: "/etc/nginx/sites-enabled/{{ nginx_config_file }}"
        state: link
      notify: Reload Nginx

  handlers:
    - name: Reload Nginx
      systemd:
        name: nginx
        state: restarted